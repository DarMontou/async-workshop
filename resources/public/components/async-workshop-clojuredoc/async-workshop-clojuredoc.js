Polymer("async-workshop-clojuredoc",{sourceVisible:!1,visibleSourceType:"clojure",sourcePaneHeights:null,created:function(){"use strict";this.invocations=[],this.cljSource={},this.cljsSource={},this.sourcePaneHeights={}},writeLines:function(a){"use strict";for(var b=function(a){var c=a.replace("\\u0039","'");return c===a?a:b(c)},c=b(a[0]),d=1;d<a.length;++d)c+="\n"+b(a[d]);return c},domReady:function(){"use strict";var a={gutter:!1,"tab-size":2,toolbar:!1};SyntaxHighlighter.highlight(a,this.$["invocation-list"]),a.gutter=!0,SyntaxHighlighter.highlight(a,this.$["clj-source"]),SyntaxHighlighter.highlight(a,this.$["cljs-source"]);var b=function(a,b,c){return a.currentStyle?a.currentStyle[b]:window.getComputedStyle?document.defaultView.getComputedStyle(a,null)[b]:c},c=b(this,"line-height","24px"),d=c.substring(0,c.indexOf("px"));this.sourcePaneHeights.clojure=d*(2+this.cljSource.source.length)+"px",this.cljsSource.source&&(this.sourcePaneHeights.clojurescript=d*(2+this.cljsSource.source.length)+"px"),this.$["source-pane"].style.height=this.sourcePaneHeights.clojure},toggleViewSource:function(){this.sourceVisible=!this.sourceVisible},sourcePanelChanged:function(a,b,c){var d="clojurescript"===c.selected,e=this.$["source-panel-height-adjust"];e.target=this.$["source-pane"],e.direction=d?"normal":"reverse",e.play(),c.style.height=this.sourcePaneHeights[c.selected]},updateSourcePaneHeight:function(){var a=this.$["source-pane"];a.style.height=this.sourcePaneHeights[a.selected]}});